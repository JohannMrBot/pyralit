version: 2.1

executors:
  python-executor:
    docker:
      - image: cimg/python:3.10  # or your preferred Python version
    working_directory: ~/repo

jobs:
  notify-start:
    docker:
      - image: curlimages/curl:latest
    steps:
      - run:
          name: Notify Slack on Start
          command: |
            curl -X POST -H 'Content-type: application/json' \
            --data '{
              "text": "Starting CircleCI workflow! :chains:",
            }' \
            $SLACK_WEBHOOK
  notify-slack-failure:
    docker:
      - image: curlimages/curl:latest
    steps:
      - run:
          name: Notify Slack on Failure
          command: |
            curl -X POST -H 'Content-type: application/json' \
            --data '{
              "text": "CircleCI workflow has failed! :x:",
            }' \
            $SLACK_WEBHOOK
  notify-slack-success:
    docker:
      - image: curlimages/curl:latest
    steps:
      - run:
          name: Notify Slack on Success
          command: |
            curl -X POST -H 'Content-type: application/json' \
            --data '{
              "text": "CircleCI workflow was successful! :tada:",
            }' \
            $SLACK_WEBHOOK
  run-tests:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            python -m venv venv
            source venv/bin/activate
            pip install -e . -r requirements.txt
      - run:
          name: Run tests
          command: |
            curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"Hello, World!"}' \
            $SLACK_WEBHOOK
            pwd
            ls -la
            source venv/bin/activate
            python -m unittest
workflows:
  version: 2
  test:
    jobs:
      - notify-start
      - run-tests
      - notify-slack-success:
          requires:
            - run-tests
      - notify-slack-failure:
          requires:
            - run-tests
          when: on_fail